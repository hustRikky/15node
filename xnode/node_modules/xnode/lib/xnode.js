/**
 * NodeX version 0.0.1
 * Created by mR.Rikkyâ„¢
 * Date: 6/2/13
 * Time: 2:24 AM
 */
require('colors');
var version = '0.0.1';
var http = require('http');
var express = require('express');
var cache = require('cache');
var defaultConfig = require('./../defaultConfig.json');
var path = require('path');
var router = require('router');

var config = defaultConfig;
var xnode = express();
var routes = [];

var __init = function(){
	var __rootdir = __dirname + './../../../'; 
    xnode.set('views', __rootdir + '/views');
    //console.log(__dirname);
    xnode.set('view engine', 'jade');
    xnode.use(express.cookieParser());
    xnode.use(express.session({secret: config.server.session_secure_value}));
    xnode.use(express.logger('dev'));
    xnode.use(express.bodyParser());
    xnode.use(express.methodOverride());
    xnode.use(xnode.router);
    xnode.use(express.static(path.join(__rootdir, 'content')));
}

var log = function(message){
    console.log('XNODE\t'.yellow + message);
}


module.exports = function(userConfig){
    console.log('EXPRESS\t'.yellow + 'LOADED'.green + '\tversion '.cyan + express.version.cyan);
    console.log('XNode version ' + version);
    console.log('XNode starting...'.grey);
    if(userConfig != null){
        config = userConfig;
    } else {
        log('WARN\t'.magenta+'No configuration found. XNode will run default configuration.'.grey);
    }
    __init();
    log('STARTED'.green.bold);
    return xnode;
};

module.exports.version = version;
module.exports.cache = xCache = cache();
module.exports.router = xRouter = router();

module.exports.run = function(){
    // route process here!
    xnode.use(function(err, req, res, next){
  		res.render(config.error.e500, {e500:'views/'+config.error.e500});
	});
	xnode.use(function(req, res){
  		res.render(config.error.e404, {e404:'views/'+config.error.e404});
	})
    http.createServer(xnode).listen(config.server.port, config.server.ip);
    log('RUN\t'.yellow + config.server.ip.cyan +':'.cyan + config.server.port.cyan);
}

module.exports.debug = function(){
    // route process here!
    http.createServer(xnode).listen(config.server.port, config.server.ip)
    log('DEBUG\t'.yellow + config.server.ip.cyan +':'.cyan + config.server.port.cyan);
}

module.exports.addRoute = function(routeMap, defaultRouteName, defaultRouteActionName, isIdOptional){
    var route = {
        map : routeMap ,
        defaultRoute : defaultRouteName,
        defaultAction : defaultRouteActionName,
        idOptional : isIdOptional
    }
    routes[route.length ? route.length : 0] = route;
}


